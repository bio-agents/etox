<?php

namespace EtoxMicrome\EntityBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CellT
 ypeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CellTypeRepository extends EntityRepository
{
    public function getEntityFromId($entityId)
    {
        $message="Inside getEntityFromId at CellTypeRepository";
        $query = $this->_em->createQuery("
            SELECT a
            FROM EtoxMicromeEntityBundle:CellType a
            WHERE a.id= :entityId
        ");
        $query->setParameter('entityId', $entityId);
        $cellType=$query->getResult();
        if(count($cellType)==0){
            $errorMessage="There is no entity with that name ('$entityName')";
            ldd($errorMessage);
        }
        if(count($cellType)!=1){
            $errorMessage="There are more than one entityName for '$entityName'";
            ldd($errorMessage);
        }
        //We return all the Compounds with the entityName given. By now we supose its only one entity!!!
        $entity=$cellType[0];
        return $entity;
    }

    public function getEntityFromName($entityName)
    {
        $message="Inside getEntityFromName at CellTypeRepository";
        $query = $this->_em->createQuery("
            SELECT a
            FROM EtoxMicromeEntityBundle:CellType a
            WHERE a.name= :entityName
        ");
        $query->setParameter('entityName', $entityName);
        $cellType=$query->getResult();
        if(count($cellType)==0){
            $errorMessage="There is no entity with that name ($entityName)";
            ldd($errorMessage);
        }
        if(count($cellType)!=1){
            $errorMessage="There are more than one entityName for '$entityName'";
            ldd($errorMessage);
        }
        //We return all the CompoundDict with the entityName given. By now we supose its only one entity!!!
        $entity=$cellType[0];
        return $entity;
    }
}
